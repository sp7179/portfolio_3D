const certificates = [
  {
    title: "AI A-Z: Gen AI + RL",
    institution: "Udemy",
    date: "2025",
    image: "https://drive.google.com/uc?export=view&id=15R9sBq85Kv5vYm2ZBzpOelIgRBwd9HzA",
    category: "Courses",
  },
  {
    title: "Winner - CodeFest 2024",
    institution: "SRMIST",
    date: "2024",
    image: "https://drive.google.com/uc?export=view&id=1OOlcfudaTLX5H5gZVYGmLAtN37ivAkjJ",
    category: "Achievements",
  },
  {
    title: "ML Bootcamp",
    institution: "IIT Delhi",
    date: "2023",
    image: "https://drive.google.com/uc?export=view&id=1RxakTBLAiFKgJB6DME-J8GOxhQEQIV7M",
    category: "Participation",
  },
];



import React, { useState } from "react";
import { motion } from "framer-motion";
import { styles } from "../styles";
import { certificates } from "../constants";
import { fadeIn, textVariant } from "../utils/motion";
import { SectionWrapper } from "../hoc";
import CertificateCard from "./CertificateCard";

const categories = ["Courses", "Achievements", "Participation"];

const Certificates = () => {
  const [activeCategory, setActiveCategory] = useState("Courses");

  const filteredCertificates = certificates.filter(
    (cert) => cert.category === activeCategory
  );

  return (
    <>
      <motion.div variants={textVariant()}>
        <p className={styles.sectionSubText}>Recognitions & Proof of Work</p>
        <h2 className={styles.sectionHeadText}>Certificates</h2>
      </motion.div>

      {/* Tabs */}
      <div className="flex justify-center gap-4 mt-8">
        {categories.map((cat) => (
          <button
            key={cat}
            onClick={() => setActiveCategory(cat)}
            className={`px-4 py-2 text-sm rounded-lg transition-all duration-300 
              ${activeCategory === cat 
                ? "bg-[#915EFF] text-white shadow-lg" 
                : "bg-[#1d1836] text-gray-400 hover:bg-[#2e225a] hover:text-white"}`}
          >
            {cat}
          </button>
        ))}
      </div>

      {/* Cards */}
      <motion.div
        variants={fadeIn("up", "spring", 0.2, 0.75)}
        className="mt-10 flex flex-wrap gap-6 justify-center bg-gradient-to-br from-[#1d1836] to-[#0f0c2f] p-8 rounded-xl shadow-2xl transition-all duration-700"
      >
        {filteredCertificates.length > 0 ? (
          filteredCertificates.map((cert, index) => (
            <CertificateCard key={`cert-${index}`} index={index} {...cert} />
          ))
        ) : (
          <p className="text-gray-400">No certificates available in this category.</p>
        )}
      </motion.div>
    </>
  );
};

export default SectionWrapper(Certificates, "certificate");








-------------------------------project.jsx---------------
import React from "react";
import Tilt from 'react-parallax-tilt';
import { motion } from "framer-motion";

import { styles } from "../styles";
import { github } from "../assets";
import { SectionWrapper } from "../hoc";
import { projects } from "../constants";
import { fadeIn, textVariant } from "../utils/motion";

const ProjectCard = ({
  index,
  name,
  description,
  tags,
  image,
  source_code_link,
}) => {
  return (
    <motion.div variants={fadeIn("up", "spring", index * 0.5, 0.75)}>
      <Tilt
      glareEnable={true}
  glareMaxOpacity={0.45}
  scale={1.05}
  transitionSpeed={250}
        options={{
          max: 45,
          scale: 1,
          speed: 450,
        }}
        className='bg-tertiary p-5 rounded-2xl sm:w-[360px] w-full'
      >
        <div className='relative w-full h-[230px]'>
          <img
            src={image}
            alt='project_image'
            className='w-full h-full object-cover rounded-2xl'
          />

          <div className='absolute inset-0 flex justify-end m-3 card-img_hover'>
            <div
              onClick={() => window.open(source_code_link, "_blank")}
              className='black-gradient w-10 h-10 rounded-full flex justify-center items-center cursor-pointer'
            >
              <img
                src={github}
                alt='source code'
                className='w-1/2 h-1/2 object-contain'
              />
            </div>
          </div>
        </div>

        <div className='mt-5'>
          <h3 className='text-white font-bold text-[24px]'>{name}</h3>
          <p className='mt-2 text-secondary text-[14px]'>{description}</p>
        </div>

        <div className='mt-4 flex flex-wrap gap-2'>
          {tags.map((tag) => (
            <p
              key={`${name}-${tag.name}`}
              className={`text-[14px] ${tag.color}`}
            >
              #{tag.name}
            </p>
          ))}
        </div>
      </Tilt>
    </motion.div>
  );
};

const Works = () => {
  return (
    <>
      <motion.div variants={textVariant()}>
        <p className={`${styles.sectionSubText} `}>My work</p>
        <h2 className={`${styles.sectionHeadText}`}>Projects.</h2>
      </motion.div>

      <div className='w-full flex'>
        <motion.p
          variants={fadeIn("", "", 0.1, 1)}
          className='mt-3 text-secondary text-[17px] max-w-3xl leading-[30px]'
        >
          Following projects showcases my skills and experience through
          real-world examples of my work. Each project is briefly described with
          links to code repositories and live demos in it. It reflects my
          ability to solve complex problems, work with different technologies,
          and manage projects effectively.
        </motion.p>
      </div>

      <div className='mt-20 flex flex-wrap gap-7'>
        {projects.map((project, index) => (
          <ProjectCard key={`project-${index}`} index={index} {...project} />
        ))}
      </div>
    </>
  );
};

export default SectionWrapper(Works, "");

---------------work.jsx--------------------------
import React, { useState } from "react";
import Tilt from "react-parallax-tilt";
import { motion, AnimatePresence } from "framer-motion";

import { styles } from "../styles";
import { github } from "../assets";
import { SectionWrapper } from "../hoc";
import { projects } from "../constants";
import { fadeIn, textVariant } from "../utils/motion";

const ProjectCard = ({
  index,
  name,
  description,
  tags,
  image,
  source_code_link,
}) => {
  return (
    <motion.div
      className="transition-all duration-500 ease-in-out transform cursor-pointer scale-100 opacity-100 z-20"
      initial={{ opacity: 0, y: 50 }}
      animate={{ opacity: 1, y: 0 }}
      exit={{ opacity: 0, y: 50 }}
      transition={{ delay: index * 0.1, type: "spring" }}
    >
      <Tilt
        glareEnable={true}
        glareMaxOpacity={0.45}
        scale={1.05}
        transitionSpeed={250}
        options={{ max: 45, scale: 1, speed: 450 }}
        className="bg-tertiary p-5 rounded-2xl w-[320px] md:w-[400px]"
      >
        <div className="relative w-full h-[230px]">
          <img
            src={image}
            alt="project_image"
            className="w-full h-full object-cover rounded-2xl"
          />

          <div className="absolute inset-0 flex justify-end m-3 card-img_hover">
            <div
              onClick={(e) => {
                e.stopPropagation();
                window.open(source_code_link, "_blank");
              }}
              className="black-gradient w-10 h-10 rounded-full flex justify-center items-center cursor-pointer"
            >
              <img
                src={github}
                alt="source code"
                className="w-1/2 h-1/2 object-contain"
              />
            </div>
          </div>
        </div>

        <div className="mt-5">
          <h3 className="text-white font-bold text-[24px]">{name}</h3>
          <p className="mt-2 text-secondary text-[14px]">{description}</p>
        </div>

        <div className="mt-4 flex flex-wrap gap-2">
          {tags.map((tag) => (
            <p
              key={`${name}-${tag.name}`}
              className={`text-[14px] ${tag.color}`}
            >
              #{tag.name}
            </p>
          ))}
        </div>
      </Tilt>
    </motion.div>
  );
};

const Works = () => {
  const [currentIndex, setCurrentIndex] = useState(0);

  const next = () => {
    setCurrentIndex((prev) => (prev + 1) % projects.length);
  };

  const prev = () => {
    setCurrentIndex((prev) => (prev - 1 + projects.length) % projects.length);
  };

  const currentProject = projects[currentIndex];

  return (
    <>
      <motion.div variants={textVariant()}>
        <p className={`${styles.sectionSubText}`}>My work</p>
        <h2 className={`${styles.sectionHeadText}`}>Projects.</h2>
      </motion.div>

      <div className="w-full flex">
        <motion.p
          variants={fadeIn("", "", 0.1, 1)}
          className="mt-3 text-secondary text-[17px] max-w-3xl leading-[30px]"
        >
          Explore my key projects. Swipe or tap to explore one by one.
        </motion.p>
      </div>

      <div className="mt-20 flex items-center justify-center relative h-[560px]">
        <AnimatePresence mode="wait">
          <div
            key={`project-${currentIndex}`}
            onClick={next}
            className="absolute w-full flex justify-center items-center"
          >
            <ProjectCard
              index={currentIndex}
              {...currentProject}
            />
          </div>
        </AnimatePresence>

        <div
          className="absolute left-0 h-full w-1/4 cursor-pointer"
          onClick={prev}
        ></div>
        <div
          className="absolute right-0 h-full w-1/4 cursor-pointer"
          onClick={next}
        ></div>
      </div>
    </>
  );
};

export default SectionWrapper(Works, "");
